{"version":3,"sources":["web.js","store/actionTypes.js","store/reducers.js","store/store.js","history.js","store/actions.js","components/SharedStyledComponents.js","components/LoginPage.js","components/LoginManager.js","components/QueueEntry.js","components/RoomPage.js","components/RoomManager.js","components/RoomEntry.js","components/BrowsePage.js","components/BrowseManager.js","App.js","serviceWorker.js","index.js"],"names":["API_URL","STATUS","EMPTY","FETCHING","FAILURE","USER_EXISTS","NOT_SUCCESSFUL","SUCCESS","fetchOptions","getThumbnail","url","vid_id","match","substr","get","method","mode","headers","post","UPDATE_LOGIN","UPDATE_PROFILE","UPDATE_ROOMS","UPDATE_ROOM_ENTRIES","UPDATE_ROOM_USERS","POST_ENTRY","POST_ROOM","POST_ADD_ROOM","SET_ROOM","SET_ENTRY","SET_URL","RESET","dataReducer","data","rooms","roomsFetchStatus","action","type","status","Object","assign","roomListReducer","updatedRooms","id","undefined","roomReducer","room_id","room","users","usersFetchStatus","entries","entriesFetchStatus","postEntryStatus","includes","length","intersection","slice","concat","authReducer","auth","authToken","authStatus","profileFetchStatus","profile","username","token","variablesReducer","variables","currentRoomID","currentlyPlaying","currentUrl","position","reducer","state","store","createStore","applyMiddleware","thunkMiddleware","createBrowserHistory","updateLogin","json","updateRooms","fetchRooms","dispatch","fetch","then","response","Error","error","catch","updateRoomEntries","fetchRoomEntries","updateRoomUsers","fetchRoomUsers","postEntry","createRoom","title","access_code","postAddRoom","setEntry","reset","colors","CenteredContainer","styled","div","SmoothDiv","SmoothSolidWhiteDiv","RowFlexContainer","ColumnFlexContainer","StyledButton","StyledInput","input","Banner","MiniBanner","MicroBanner","ScrollBody","LoginPage","props","formRef","React","createRef","this","onLogin","onRegister","grow","flexGrow","className","style","width","path","onSubmit","evt","ref","placeholder","onClick","current","dispatchEvent","Event","to","Component","LoginManager","connect","value","password","alert","login","setTimeout","getState","history","push","email","register","Thumbnail","img","QueueEntry","blackText","color","textOverflow","whiteSpace","overflow","divColor","backgroundColor","playing","duration","toString","src","thumbUrl","RoomPage","update","prepare","playNext","playingPos","playingUrl","updateUrl","progress","upload","RoomEntries","callback","i","map","entry","reverse","console","log","roomEntries","setPlaying","bind","top","left","textDecoration","height","display","vendor","autoPlay","useAudioObject","onTimeUpdate","marginLeft","RoomManager","ownProps","params","postStatus","usersStatus","entriesStatus","uploadEntry","setRoom","setUrl","RoomEntry","fontWeight","marginBottom","marginRight","BrowsePage","joinRef","create","join","RoomComponents","roomID","createRooms","BrowseManager","joinRoom","App","setInterval","component","exact","render","name","zIndex","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0c66bca8.chunk.js","sourcesContent":["const API_URL = \"http://192.168.0.105:8080\";\nconst STATUS = {\n  EMPTY: \"EMPTY\",\n  FETCHING: \"FETCHING\",\n  FAILURE: \"FAILURE\",\n  USER_EXISTS: \"USER_EXISTS\",\n  NOT_SUCCESSFUL: [\"EMPTY\", \"FETCHING\", \"FAILURE\", \"USER_EXISTS\"],\n\n  SUCCESS: \"SUCCESS\",\n}\n\nconst fetchOptions = {}\n\nfetchOptions.get = {\n  method: \"GET\",\n  mode: \"cors\",\n  headers: {\n    'Access-Control-Allow-Origin': '*',\n    \"Access-Control-Allow-Methods\": \"GET, POST, DELETE, PUT, OPTIONS\",\n    \"Access-Control-Allow-Headers\": \"X-Requested-With, Content-Type, Authorization, Origin, Accept\",\n    'Origin': 'http://localhost:3030',\n  }\n}\n\nfetchOptions.post = {\n  method: \"POST\",\n  mode: \"cors\",\n  headers: {\n    'Access-Control-Allow-Origin': '*',\n    \"Access-Control-Allow-Methods\": \"GET, POST, DELETE, PUT, OPTIONS\",\n    \"Access-Control-Allow-Headers\": \"X-Requested-With, Content-Type, Authorization, Origin, Accept\",\n    'Origin': 'http://localhost:3030',\n  }\n}\n\nfunction getThumbnail(url) {\n  // var id_pattern = /watch?v=.*/;\n  var vid_id = url.match(/watch\\?v=.*/g)[0].substr(8);\n  return `https://img.youtube.com/vi/${vid_id}/default.jpg`\n}\n\nexport {\n  API_URL,\n  STATUS,\n  fetchOptions,\n  getThumbnail,\n}\n","const UPDATE_LOGIN = 'UPDATE_LOGIN';\nconst LOGIN = 'LOGIN';\nconst REGISTER = 'REGISTER';\nconst UPDATE_PROFILE = 'UPDATE_PROFILE';\nconst FETCH_PROFILE = 'FETCH_PROFILE';\nconst UPDATE_ROOMS = 'UPDATE_ROOMS';\nconst FETCH_ROOMS = 'FETCH_ROOMS';\nconst UPDATE_ROOM_ENTRIES = 'UPDATE_ROOM_ENTRIES';\nconst FETCH_ROOM_ENTRIES = 'FETCH_ROOM_ENTRIES';\nconst UPDATE_ROOM_USERS = 'UPDATE_ROOM_USERS';\nconst FETCH_ROOM_USERS = 'FETCH_ROOM_USERS';\nconst POST_ENTRY = 'POST_ENTRY';\nconst UPLOAD_ENTRY = 'UPLOAD_ENTRY';\nconst POST_ROOM = 'POST_ROOM';\nconst CREATE_ROOM = 'CREATE_ROOM';\nconst POST_ADD_ROOM = 'POST_ADD_ROOM';\nconst JOIN_ROOM = 'JOIN_ROOM';\nconst SET_ROOM = 'SET_ROOM';\nconst SET_ENTRY = 'SET_ENTRY';\nconst SET_URL = 'SET_URL';\nconst RESET = 'RESET';\n\n\nexport {\n  UPDATE_LOGIN,\n  LOGIN,\n  REGISTER,\n  UPDATE_PROFILE,\n  FETCH_PROFILE,\n  UPDATE_ROOMS,\n  FETCH_ROOMS,\n  UPDATE_ROOM_ENTRIES,\n  FETCH_ROOM_ENTRIES,\n  UPDATE_ROOM_USERS,\n  FETCH_ROOM_USERS,\n  POST_ENTRY,\n  UPLOAD_ENTRY,\n  POST_ROOM,\n  CREATE_ROOM,\n  POST_ADD_ROOM,\n  JOIN_ROOM,\n  SET_ROOM,\n  SET_ENTRY,\n  SET_URL,\n  RESET,\n}\n","import {STATUS} from '../web.js';\nimport {\n  UPDATE_LOGIN,\n  UPDATE_PROFILE,\n  UPDATE_ROOMS,\n  UPDATE_ROOM_ENTRIES,\n  UPDATE_ROOM_USERS,\n  POST_ENTRY,\n  SET_ROOM,\n  SET_ENTRY,\n  SET_URL,\n  RESET,\n} from './actionTypes.js'\n\n\nfunction dataReducer(data = {\n  rooms: {},\n  roomsFetchStatus: STATUS.EMPTY,\n}, action) {\n  switch (action.type) {\n    case UPDATE_ROOMS:\n      if (action.status in STATUS.NOT_SUCCESSFUL) {\n        return Object.assign({}, data, {\n          roomsFetchStatus: action.status\n        });\n      } else {\n        return Object.assign({}, data, {\n          roomsFetchStatus: action.status,\n          rooms: roomListReducer(data.rooms, action)\n        })\n      }\n\n    default:\n      return Object.assign({}, data, {\n        rooms: roomListReducer(data.rooms, action),\n      });\n  }\n}\n\n\nfunction roomListReducer(rooms = {}, action) {\n  switch (action.type) {\n    case UPDATE_ROOMS:\n      var updatedRooms = Object.assign({}, rooms)\n      for (var id in action.rooms) {\n        if (id !== undefined) {\n          updatedRooms[action.rooms[id].id] = Object.assign({}, roomReducer(rooms[id], action), action.rooms[id])\n        }\n      }\n      return Object.assign({}, rooms, updatedRooms)\n\n    default:\n      if (action.room_id !== undefined) {\n        updatedRooms = Object.assign({}, rooms);\n        updatedRooms[action.room_id] = roomReducer(rooms[action.room_id], action);\n        return Object.assign({}, rooms, updatedRooms);\n      }\n      return rooms;\n  }\n}\n\nfunction roomReducer(room={\n  users: [],\n  usersFetchStatus: STATUS.EMPTY,\n  entries: [],\n  entriesFetchStatus: STATUS.EMPTY,\n  postEntryStatus: STATUS.EMPTY,\n}, action) {\n  switch (action.type) {\n    // case UPDATE_ROOMS:\n    //   return Object.assign({}, room, {\n    //     id: action.id,\n    //     title: action.title,\n    //     currentlyPlaying: action.currentlyPlaying,\n    //   });\n    case UPDATE_ROOM_USERS:\n      if (action.status in STATUS.NOT_SUCCESSFUL) {\n        return Object.assign({}, room, {\n          usersFetchStatus: action.status,\n        });\n      }\n      else {\n        return Object.assign({}, room, {\n          usersFetchStatus: action.status,\n          users: action.users,\n        });\n      }\n    case UPDATE_ROOM_ENTRIES:\n      if (STATUS.NOT_SUCCESSFUL.includes(action.status)) {\n        return Object.assign({}, room, {\n          entriesFetchStatus: action.status,\n        });\n      }\n      else {\n        if (action.entries.length > room.entries) {\n          for (var intersection = 0; intersection < room.entries; intersection++) {\n            if (room.entries[intersection].id === action.entries.slice(-1)[0].id) {\n              break;\n            }\n          }\n          // var prefix = action.entries.length - intersection;\n\n          return Object.assign({}, room, {\n            entriesFetchStatus: action.status,\n            entries: room.entries.concat(action.entries.slice(intersection)),\n          });\n        } else {\n          return Object.assign({}, room, {\n            entriesFetchStatus: action.status,\n          });\n        }\n      }\n    case POST_ENTRY:\n      return Object.assign({}, room, {\n        postEntryStatus: action.status,\n      })\n    default:\n      return room;\n  }\n}\n\nfunction authReducer(auth = {\n  authToken: undefined,\n  authStatus: STATUS.EMPTY,\n  profileFetchStatus: STATUS.EMPTY,\n  profile: {\n    id: undefined,\n    username: undefined,\n  }\n}, action) {\n  switch (action.type) {\n    case UPDATE_LOGIN:\n      return Object.assign({}, auth, {\n        authStatus: action.status,\n        authToken: action.token,\n      });\n\n    case UPDATE_PROFILE:\n      if (action.status in STATUS.NOT_SUCCESSFUL) {\n        return Object.assign({}, auth, {\n          profileFetchStatus: action.status,\n        });\n      }\n      else {\n        return Object.assign({}, auth, {\n          profileFetchStatus: action.status,\n          profile: {\n            id: action.id,\n            username: action.username,\n          }\n        });\n      }\n\n    default:\n      return auth;\n  }\n}\n\nfunction variablesReducer(variables={\n  currentRoomID: undefined,\n  currentlyPlaying: 0,\n  currentUrl: 'https://www.youtube.com/watch?v=QggJzZdIYPI',\n}, action) {\n  switch (action.type) {\n    case SET_ROOM:\n      return Object.assign({}, variables, {currentRoomID: action.id});\n    case SET_ENTRY:\n      if (action.position === 'next' && variables.currentlyPlaying !== undefined) {\n        return Object.assign({}, variables, {currentlyPlaying: variables.currentlyPlaying + 1})\n      }\n      return Object.assign({}, variables, {currentlyPlaying: action.position});\n    case SET_URL:\n      return Object.assign({}, variables, {currentUrl: action.url});\n    default:\n      return variables;\n  }\n}\n\nfunction reducer(state={}, action) {\n  switch (action.type) {\n    case RESET:\n      return Object.assign({}, state, {\n        data: dataReducer(undefined, action),\n        auth: authReducer(undefined, action),\n        variables: variablesReducer(undefined, action),\n      });\n\n    default:\n      return Object.assign({}, state, {\n        data: dataReducer(state.data, action),\n        auth: authReducer(state.auth, action),\n        variables: variablesReducer(state.variables, action),\n      });\n  }\n}\n\nexport default reducer\n","import { createStore, applyMiddleware } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport reducer from './reducers'\n\nconst store = createStore(reducer, applyMiddleware(thunkMiddleware));\n\nexport default store;\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();\n","import fetch from 'cross-fetch';\nimport {API_URL, STATUS, fetchOptions} from '../web.js';\nimport {\n  UPDATE_LOGIN,\n  UPDATE_PROFILE,\n  UPDATE_ROOMS,\n  UPDATE_ROOM_ENTRIES,\n  UPDATE_ROOM_USERS,\n  POST_ENTRY,\n  POST_ROOM,\n  POST_ADD_ROOM,\n  SET_ROOM,\n  SET_ENTRY,\n  SET_URL,\n  RESET,\n} from './actionTypes.js'\n\nfunction updateLogin(status, json) {\n  if ([STATUS.FETCHING, STATUS.FAILURE, STATUS.USER_EXISTS, STATUS.EMPTY].includes(status)) {\n    return {\n      type: UPDATE_LOGIN,\n      status: status,\n    }\n  } else if (status === STATUS.SUCCESS) {\n    return {\n      type: UPDATE_LOGIN,\n      status: status,\n      token: json.token,\n    }\n  }\n}\n\nfunction login(username, password) {\n\n  return function(dispatch) {\n    dispatch(reset())\n    dispatch(updateLogin(STATUS.FETCHING))\n\n    return fetch(\n      API_URL +\n      `/auth/login?username=${username}&password=${password}`,\n      fetchOptions.post\n    ).then(\n      response => response.json(),\n      error => {\n        // Resolve error\n        alert(error);\n        dispatch(updateLogin(STATUS.FAILURE))\n        throw new Error()\n      }\n    ).then(\n      json => {\n        if (json.status === 'success') {\n          dispatch(updateLogin(STATUS.SUCCESS, json));\n        } else {\n          alert('Operation failed. Reason: ' + json.token);\n          throw new Error()\n        }\n      }\n    ).catch( error => {\n      dispatch(updateRooms(STATUS.FAILURE))\n    })\n  }\n}\n\n// function logout() {\n//   return {\n//     type: RESET,\n//   }\n// }\n\nfunction register(username, email, password) {\n\n  return function(dispatch) {\n    dispatch(reset())\n    dispatch(updateLogin(STATUS.FETCHING))\n\n    return fetch(\n      API_URL +\n      `/auth/register?username=${username}&email=${email}&password=${password}`,\n      fetchOptions.post\n    ).then(\n      response => response.json(),\n      error => {\n        // Resolve error\n        alert(error);\n        dispatch(updateLogin(STATUS.USER_EXISTS))\n        throw new Error()\n      }\n    ).then(\n      json => {\n        if (json.status === 'success') {\n          dispatch(updateLogin(STATUS.SUCCESS, json));\n        } else {\n          alert('Operation failed. Reason: ' + json.token);\n          throw new Error()\n        }\n      }\n    ).catch( error => {\n      dispatch(updateRooms(STATUS.USER_EXISTS))\n    })\n  }\n}\n\n\nfunction updateProfile(status, json) {\n  if ([STATUS.FETCHING, STATUS.FAILURE].includes(status)) {\n    return {\n      type: UPDATE_PROFILE,\n      status: status,\n    }\n  } else if (status === STATUS.SUCCESS) {\n    return {\n      type: UPDATE_PROFILE,\n      status: status,\n      id: json.id,\n      username: json.username,\n    }\n  }\n}\n\nfunction fetchProfile(token) {\n\n  return function(dispatch) {\n    dispatch(updateProfile(STATUS.FETCHING))\n\n    return fetch(\n      API_URL +\n      '/api/user/me' +\n      `?token=${token}`,\n      fetchOptions.get\n    ).then(\n      response => response.json(),\n      error => {\n        // Resolve error\n        dispatch(updateProfile(STATUS.FAILURE))\n      }\n    ).then(\n      json => dispatch(updateProfile(STATUS.SUCCESS, json))\n    )\n  }\n}\n\n\nfunction updateRooms(status, json) {\n  if ([STATUS.FETCHING, STATUS.FAILURE].includes(status)) {\n    return {\n      type: UPDATE_ROOMS,\n      status: status,\n    }\n  } else if (status === STATUS.SUCCESS) {\n    return {\n      type: UPDATE_ROOMS,\n      status: status,\n      rooms: json\n    }\n  }\n}\n\nfunction fetchRooms(token) {\n\n  return function(dispatch) {\n    dispatch(updateRooms(STATUS.FETCHING))\n\n    return fetch(\n      API_URL +\n      '/api/room/list' +\n      `?token=${token}`,\n      fetchOptions.get\n    ).then(\n      response => {\n        if (response.status === 200) {\n          return response.json()\n        } else {\n          throw new Error(response.status)\n        }\n      },\n      error => {\n        throw new Error(error)\n      }\n    ).then(\n      json => dispatch(updateRooms(STATUS.SUCCESS, json))\n    ).catch( error => {\n      dispatch(updateRooms(STATUS.FAILURE))\n    })\n  }\n}\n\n\nfunction updateRoomEntries(status, room_id, json) {\n  if ([STATUS.FETCHING, STATUS.FAILURE].includes(status)) {\n    return {\n      type: UPDATE_ROOM_ENTRIES,\n      status: status,\n      room_id: room_id,\n    }\n  } else if (status === STATUS.SUCCESS) {\n    return {\n      type: UPDATE_ROOM_ENTRIES,\n      status: status,\n      room_id: room_id,\n      entries: json,\n    }\n  }\n}\n\nfunction fetchRoomEntries(room_id, token) {\n\n  return function(dispatch) {\n    dispatch(updateRoomEntries(STATUS.FETCHING, room_id))\n\n    return fetch(\n      API_URL +\n      `/api/room/${room_id}/list_entries` +\n      `?token=${token}`,\n      fetchOptions.get\n    ).then(\n      response => response.json(),\n      error => {\n        // Resolve error\n        dispatch(updateRoomEntries(STATUS.FAILURE, room_id))\n      }\n    ).then(\n      json => dispatch(updateRoomEntries(STATUS.SUCCESS, room_id, json))\n    )\n  }\n}\n\n\nfunction updateRoomUsers(status, room_id, json) {\n  if ([STATUS.FETCHING, STATUS.FAILURE].includes(status)) {\n    return {\n      type: UPDATE_ROOM_USERS,\n      status: status,\n      room_id: room_id,\n    }\n  } else if (status === STATUS.SUCCESS) {\n    return {\n      type: UPDATE_ROOM_USERS,\n      status: status,\n      room_id: room_id,\n      users: json,\n    }\n  }\n}\n\nfunction fetchRoomUsers(room_id, token) {\n\n  return function(dispatch) {\n    dispatch(updateRoomUsers(STATUS.FETCHING, room_id))\n\n    return fetch(\n      API_URL +\n      `/api/room/${room_id}/list_users` +\n      `?token=${token}`,\n      fetchOptions.get\n    ).then(\n      response => response.json(),\n      error => {\n        // Resolve error\n        dispatch(updateRoomUsers(STATUS.FAILURE, room_id))\n      }\n    ).then(\n      json => dispatch(updateRoomUsers(STATUS.SUCCESS, room_id, json))\n    )\n  }\n}\n\n\nfunction postEntry(status, room_id) {\n  return {\n    type: POST_ENTRY,\n    status: status,\n    room_id: room_id,\n  }\n}\n\nfunction uploadEntry(room_id, url, token) {\n\n  return function(dispatch) {\n    dispatch(postEntry(STATUS.FETCHING, room_id), )\n\n    return fetch(\n      API_URL +\n      `/api/room/${room_id}/add_entry?url=${url}` +\n      `&token=${token}`,\n      fetchOptions.post\n    ).then(\n      response => response.json(),\n      error => {\n        // Resolve error\n        dispatch(postEntry(STATUS.FAILURE, room_id))\n      }\n    ).then(\n      json => {\n        dispatch(postEntry(STATUS.SUCCESS, room_id))\n        dispatch(fetchRoomEntries(room_id))\n      }\n    )\n  }\n}\n\n\nfunction postRoom(status) {\n  return {\n    type: POST_ROOM,\n    status: status,\n  };\n}\n\nfunction createRoom(title, access_code, token) {\n\n  return function(dispatch) {\n    dispatch(postRoom(STATUS.FETCHING))\n\n    return fetch(\n      API_URL +\n      `/api/room/create?title=${title}&access_code=${access_code}` +\n      `&token=${token}`,\n      fetchOptions.post\n    ).then(\n      response => response.json(),\n      error =>{\n        // resolving error\n        dispatch(createRoom(STATUS.FAILURE))\n      }\n    ).then(\n      json => {\n        dispatch(createRoom(STATUS.SUCCESS))\n        dispatch(fetchRooms())\n      }\n    )\n  }\n}\n\n\nfunction postAddRoom(status) {\n  return {\n    type: POST_ADD_ROOM,\n    status: status,\n  };\n}\n\nfunction joinRoom(room_id, access_code, token) {\n\n  return function(dispatch) {\n    dispatch(postAddRoom(STATUS.FETCHING));\n\n    return fetch(\n      API_URL +\n      `/api/room/${room_id}/join?access_code=${access_code}` +\n      `&token=${token}`,\n      fetchOptions.post\n    ).then(\n      response => response.json(),\n      error => {\n        // resolving error\n        dispatch(postAddRoom(STATUS.FAILURE));\n      }\n    ).then(\n      json => {\n        console.log(json);\n        dispatch(postAddRoom(STATUS.SUCCESS));\n        dispatch(fetchRooms());\n      }\n    )\n  }\n}\n\n\nfunction setRoom(id) {\n  return {\n    type: SET_ROOM,\n    id: id,\n  };\n}\n\n\nfunction setEntry(position) {\n  return {\n    type: SET_ENTRY,\n    position: position,\n  };\n}\n\n\nfunction nextEntry() {\n  return {\n    type: SET_ENTRY,\n    position: 'next',\n  };\n}\n\n\nfunction setUrl(url) {\n  return {\n    type: SET_URL,\n    url: url,\n  }\n}\n\n\nfunction reset() {\n  return {\n    type: RESET,\n  }\n}\n\n\nexport {\n  updateLogin,\n  login,\n  register,\n  updateProfile,\n  fetchProfile,\n  updateRooms,\n  fetchRooms,\n  updateRoomUsers,\n  fetchRoomUsers,\n  updateRoomEntries,\n  fetchRoomEntries,\n  postEntry,\n  uploadEntry,\n  postRoom,\n  createRoom,\n  postAddRoom,\n  joinRoom,\n  setRoom,\n  setEntry,\n  setUrl,\n  nextEntry,\n}\n","import styled from \"styled-components\";\n\nconst colors = {\n  blue: \"#008CDA\",\n  grey: \"#3030305C\",\n  white: \"#FFFFFF\",\n  black: \"#000000\",\n}\n\nconst CenteredContainer = styled.div`\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ScreenContainer = styled.div`\n  height: 100vh;\n`;\n\nconst SmoothDiv = styled.div`\n  background-color: ${colors.grey};\n  /* border-style: solid;\n  border-width: 15px; */\n  padding: 15px 10px;\n  border-radius: 10px;\n  border-color: ${colors.grey};\n`;\n\nconst SmoothSolidWhiteDiv = styled.div`\n  background-color: ${colors.white};\n  /* border-style: solid;\n  border-width: 15px; */\n  padding: 15px 10px;\n  border-radius: 10px;\n  border-color: ${colors.white};\n`;\n\nconst SmoothSolidBlackDiv = styled.div`\n  background-color: ${colors.black};\n  /* border-style: solid;\n  border-width: 15px; */\n  padding: 15px 10px;\n  border-radius: 10px;\n  border-color: ${colors.black};\n`;\n\nconst RowFlexContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\n\nconst ColumnFlexContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst StyledButton = styled.div`\n  color: #0099CC;\n  background: transparent;\n  border-radius: 5px;\n  text-decoration: none;\n  text-transform: uppercase;\n  color: white;\n  padding: 8px 12px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n  margin: 4px 2px;\n  transition-duration: 0.4s;\n  cursor: pointer;\n\n  background-color: white;\n  color: black;\n  /* border: 2px solid ${colors.blue}; */\n\n  :hover {\n    background-color: ${colors.grey} !important;\n    color: white;\n  }\n`;\n\nconst StyledInput = styled.input`\n  display: block;\n  font-size: 16px;\n  padding: 5px;\n  margin: 4px 2px;\n  border: none;\n  /* border: 2px solid ${colors.grey}; */\n  border-radius: 5px;\n  color: #333;\n  transition: all 0.3s ease-out;\n\n  width: calc(100% - calc(8px + 5px));\n  background-color: ${colors.white};\n\n  :hover {\n    /* border-ras */\n  }\n\n  :focus {\n    outline: none;\n    /* border-radius: 8px;\n    border-color: #EBD292; */\n    background-color: ${colors.grey} !important;\n    color: white;\n  }\n`;\n\nconst Banner = styled.div`\n  font-size: 50px;\n  margin: 50px;\n  color: ${colors.white}\n  transition: all 0.3s ease-out;\n  cursor: default;\n`;\n\nconst MiniBanner = styled.div`\n  font-weight: bold;\n  font-size: 20px;\n  margin: 0px 20px 0px 10px;\n  color: ${colors.white}\n  cursor: default;\n`;\n\nconst MicroBanner  = styled.div`\n  font-weight: bold;\n  font-size: 12px;\n  margin: 10px 20px 10px 10px;\n  color: ${colors.white}\n  cursor: default;\n`;\n\nconst ScrollBody = styled.div`\n  display: block;\n  overflow-y: scroll;\n  overflow-x: hidden;\n  height: 100%;\n`;\n\nexport {\n  colors,\n  CenteredContainer,\n  SmoothDiv,\n  SmoothSolidWhiteDiv,\n  SmoothSolidBlackDiv,\n  RowFlexContainer,\n  ColumnFlexContainer,\n  StyledButton,\n  StyledInput,\n  Banner,\n  MiniBanner,\n  MicroBanner,\n  ScrollBody,\n  ScreenContainer,\n};\n","import React from \"react\";\nimport {\n  Switch,\n  Route,\n  Link,\n} from \"react-router-dom\";\nimport {\n  // colors,\n  CenteredContainer,\n  SmoothDiv,\n  ColumnFlexContainer,\n  RowFlexContainer,\n  StyledButton,\n  StyledInput,\n  Banner,\n} from \"./SharedStyledComponents.js\";\nimport \"../styles/gradient.css\";\n// import InputForm from \"./InputForm.js\";\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.formRef = React.createRef();\n  }\n\n  render() {\n    const {onLogin, onRegister} = this.props\n\n    let grow = {flexGrow: \"1\"};\n    let smoothDivStyle ={width: \"400px\"}\n\n    return (\n      <CenteredContainer className=\"gradient-background\">\n        <Banner> Broadcast </Banner>\n        <SmoothDiv style={smoothDivStyle}>\n              <ColumnFlexContainer>\n                <Switch>\n                  <Route path={\"/login\"}>\n                    <form id=\"login-form\"\n                          onSubmit={evt => onLogin(evt, this.formRef)}\n                          action=\"/signup\"\n                          method=\"post\"\n                          ref={this.formRef}\n                    >\n                      <StyledInput id=\"login-username\" placeholder=\"Login…\" type=\"text\" />\n                      <StyledInput id=\"login-password\" placeholder=\"Password…\" type=\"password\" />\n                      <RowFlexContainer>\n                        <StyledButton onClick={()=>{this.formRef.current.dispatchEvent(new Event('submit'))}}\n                                      style={grow}\n                        > SIGN IN </StyledButton>\n                        <Link to=\"/register\">\n                          <StyledButton type=\"button\"> SIGN UP </StyledButton>\n                        </Link>\n                      </RowFlexContainer>\n                    </form>\n                  </Route>\n                  <Route path={\"/register\"}>\n                    <form id=\"register-form\"\n                          onSubmit={evt => onRegister(evt, this.formRef)}\n                          action=\"/signup\"\n                          method=\"post\"\n                          ref={this.formRef}\n                    >\n                      <StyledInput id=\"register-username\" placeholder=\"Login…\" type=\"text\" />\n                      <StyledInput id=\"register-password\" placeholder=\"Password…\" type=\"password\" />\n                      {/*<StyledInput placeholder=\"Repeat Password…\" type=\"password\" />*/}\n                      <StyledInput id=\"register-email\" placeholder=\"Email…\" type=\"email\" />\n                      <RowFlexContainer>\n                        <StyledButton onClick={()=>{this.formRef.current.dispatchEvent(new Event('submit'))}}\n                                      style={grow}\n                        > SIGN UP </StyledButton>\n                        <Link to=\"/login\">\n                          <StyledButton type=\"button\"> GO BACK </StyledButton>\n                        </Link>\n                      </RowFlexContainer>\n                    </form>\n                  </Route>\n                </Switch>\n              </ColumnFlexContainer>\n        </SmoothDiv>\n      </CenteredContainer>\n    );\n  }\n};\n\nexport default LoginPage;\n","import { connect } from 'react-redux';\n\nimport LoginPage from './LoginPage';\nimport {login, register} from '../store/actions.js';\nimport history from '../history.js';\nimport store from '../store/store.js';\nimport {STATUS} from '../web.js';\n\n\nconst mapStateToProps = (state) => {\n  return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onLogin: (evt, ref) => {\n      var username = ref.current[0].value;\n      var password = ref.current[1].value;\n      dispatch(login(username, password));\n      setTimeout(() => {\n        if (store.getState().auth.authStatus === STATUS.SUCCESS) {\n          history.push('/browse')\n        }\n      }, 500);\n    },\n    onRegister: (evt, ref) => {\n      var username = ref.current[0].value;\n      var password = ref.current[1].value;\n      var email = ref.current[2].value;\n      dispatch(register(username, email, password));\n      setTimeout(() => {\n        if (store.getState().auth.authStatus === STATUS.SUCCESS) {\n          history.push('/browse')\n        }\n      }, 500);\n    },\n  }\n}\n\nconst LoginManager = connect(mapStateToProps, mapDispatchToProps)(LoginPage);\n\nexport default LoginManager;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport {\n  RowFlexContainer,\n  ColumnFlexContainer,\n  MiniBanner,\n  MicroBanner,\n  SmoothSolidWhiteDiv,\n} from \"./SharedStyledComponents\";\n\nconst Thumbnail = styled.img`\n  width: 80px;\n  height: 60px;\n`\n\nfunction QueueEntry(props) {\n  let blackText = {color: \"black\", textOverflow: \"ellipsis\", whiteSpace: \"nowrap\", overflow: \"hidden\"};\n  let panelDimentions = {width: \"350px\"};\n  let divColor = {backgroundColor: props.playing ? 'red' : 'white'};\n\n  return(\n    <div>\n      <SmoothSolidWhiteDiv onClick={props.onClick} style={ divColor }>\n        <RowFlexContainer>\n          <ColumnFlexContainer>\n            <MiniBanner style={Object.assign({}, panelDimentions, blackText)}>\n              {props.title}\n            </MiniBanner>\n            <MicroBanner style={blackText}>\n              Duration - {props.duration.toString()} seconds\n            </MicroBanner>\n          </ColumnFlexContainer>\n          <Thumbnail src={props.thumbUrl}>\n          </Thumbnail>\n        </RowFlexContainer>\n      </SmoothSolidWhiteDiv>\n      <p/>\n    </div>\n  );\n}\n\nexport default QueueEntry;\n","import React from \"react\";\nimport {Media, Player} from \"react-media-player\";\nimport {Link} from \"react-router-dom\";\nimport {\n  CenteredContainer,\n  // ScreenContainer,\n  SmoothDiv,\n  // SmoothSolidWhiteDiv,\n  RowFlexContainer,\n  ColumnFlexContainer,\n  StyledButton,\n  StyledInput,\n  Banner,\n  MiniBanner,\n  ScrollBody,\n} from \"./SharedStyledComponents\";\nimport QueueEntry from \"./QueueEntry\";\n// import MediaController from \"./MediaController\";\nimport \"../styles/gradient.css\";\nimport { getThumbnail } from \"../web.js\";\n\n// const { PlayPause, MuteUnmute } = controls\n\nfunction roomEntries(entries, callback, update, playing) {\n    try {\n      let i = -1\n      return entries.map((entry) => {\n        i++;\n        return <QueueEntry\n          title={entry.title.substr(0, 150)}\n          duration={entry.duration}\n          thumbUrl={getThumbnail(entry.url)}\n          playing={(i === playing)}\n          onClick={((i) => (() => {\n            callback(i);\n          }))(i)}\n        />\n      }).reverse()\n    } catch(error) {\n      console.log(error);\n      return [];\n    }\n}\n\nclass RoomPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const {id, token, status, update, prepare} = this.props;\n\n    update(id, token, status);\n    prepare(id);\n\n    this.formRef = React.createRef();\n  }\n\n  updateUrl(evt) {\n    const {playNext, entries, playingPos, playingUrl, updateUrl} = this.props\n    if (evt.progress === 1) {\n      playNext();\n    }\n    if (entries !== undefined && playingPos !== undefined) {\n      if (entries[playingPos] !== undefined) {\n        if (entries[playingPos].url !== undefined) {\n          if (entries[playingPos].url !== playingUrl) {\n            updateUrl(entries[playingPos].url)\n          }\n        }\n      }\n    }\n  }\n\n  render() {\n    const {\n      id,\n      title,\n      // users,\n      entries,\n      upload,\n      token,\n      status,\n      playingPos,\n      playingUrl,\n      // updateUrl,\n      setPlaying,\n    } = this.props;\n\n    let grow = {flexGrow: \"1\"};\n    let leftMargin = {marginLeft: \"10px\"};\n    let panelDimentions = {height: \"400px\", width: \"800px\"};\n    // let absolute = {position: 'absolute'}\n    let scrollHeight = {height: \"calc(100%)\", width: '470px'};\n    let bannerPosition = {position: 'fixed', top: '0px', left: '0px'};\n    let titlePosition = {position: 'relative', top: '-10px'};\n\n    const RoomEntries = roomEntries(entries, setPlaying, this.updateUrl.bind(this), playingPos);\n\n    return (\n      <CenteredContainer className=\"gradient-static\">\n        <div style={bannerPosition}>\n          <RowFlexContainer>\n            <Banner>\n              Broadcast\n            </Banner>\n            <Link to=\"/browse\" style={{color: 'black', textDecoration: 'None'}}>\n              <Banner>\n                Rooms\n              </Banner>\n            </Link>\n          </RowFlexContainer>\n        </div>\n        <Media>\n\n          <RowFlexContainer style={panelDimentions}>\n            <ColumnFlexContainer>\n              <div className=\"media\">\n                <MiniBanner style={titlePosition}>\n                  {title} {'\\t'} <text style={{color: 'LightGrey'}}> (id: {id}) </text>\n                </MiniBanner>\n                <Player display=\"none\" src={playingUrl} vendor=\"audio\" autoPlay={true} useAudioObject={true} onTimeUpdate={this.updateUrl.bind(this)} />\n              </div>\n              <div>\n                <RowFlexContainer>\n                  <form id=\"upload-form\"\n                        onSubmit={evt => upload(evt, this.formRef, id, token, status)}\n                        ref={this.formRef}\n                        style={grow}\n                  >\n                    <RowFlexContainer>\n                      <StyledInput id=\"upload-url\" placeholder=\"URL...\" type=\"text\" style={grow} />\n                      <StyledButton onClick={()=>{this.formRef.current.dispatchEvent(new Event('submit'))}}> Broadcast </StyledButton>\n                    </RowFlexContainer>\n                  </form>\n                </RowFlexContainer>\n              </div>\n            </ColumnFlexContainer>\n            <SmoothDiv style={leftMargin}>\n              <ScrollBody style={scrollHeight}>\n                {RoomEntries}\n              </ScrollBody>\n            </SmoothDiv>\n          </RowFlexContainer>\n        </Media>\n      </CenteredContainer>\n    );\n  }\n};\n\nexport default RoomPage;\n","import { connect } from 'react-redux';\n// import { useParams } from 'react-router-dom';\nimport { fetchRoomUsers, fetchRoomEntries, uploadEntry, setRoom, setEntry, nextEntry, setUrl } from '../store/actions.js';\nimport { STATUS } from '../web.js';\nimport history from '../history.js';\n// import state from '../store/store.js';\n\nimport RoomPage from './RoomPage.js'\n\nconst mapStateToProps = (state, ownProps) => {\n  try {\n    return {\n      id: ownProps.match.params.id,\n      title: state.data.rooms[ownProps.match.params.id].title,\n      playingPos: state.variables.currentlyPlaying,\n      playingUrl: state.variables.currentUrl,\n\n      postStatus: state.data.rooms[ownProps.match.params.id].postEntryStatus,\n\n      users: state.data.rooms[ownProps.match.params.id].users,\n      usersStatus: state.data.rooms[ownProps.match.params.id].usersFetchStatus,\n\n      entries: state.data.rooms[ownProps.match.params.id].entries,\n      entriesStatus: state.data.rooms[ownProps.match.params.id].entriesFetchStatus,\n\n      token: state.auth.authToken,\n      status: state.auth.authStatus,\n    };\n  } catch(error) {\n    history.push('/login');\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  update: (id, token, status) => {\n    if (status === STATUS.SUCCESS) {\n      dispatch(fetchRoomUsers(id, token));\n      dispatch(fetchRoomEntries(id, token));\n    } else {\n      history.push('/login');\n    }\n  },\n  upload: (evt, ref, id, token, status) => {\n    if (status === STATUS.SUCCESS) {\n      var url = ref.current[0].value;\n      ref.current.reset()\n      dispatch(uploadEntry(id, url, token));\n    } else {\n      history.push('/login');\n    }\n  },\n  prepare: (id) => {\n    dispatch(setRoom(id));\n    dispatch(setEntry(0));\n  },\n  updateUrl: (url) => {\n    try {\n      dispatch(setUrl(url)); //'https://www.youtube.com/watch?v=rT_S-ShiOtQ'));\n    } catch (error) {\n    }\n  },\n  playNext: () => {\n    dispatch(nextEntry());\n  },\n  setPlaying: (position) => {\n    dispatch(setEntry(position));\n  },\n});\n\n\nconst RoomManager = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RoomPage);\n\nexport default RoomManager;\n","import React from \"react\";\nimport {SmoothSolidWhiteDiv} from \"./SharedStyledComponents.js\";\nimport { Link } from \"react-router-dom\"\n\n// Get youtube title snippet:\n\nfunction RoomEntry({title, id}) {\n  let divFontMargin = {\n    fontWeight: \"bold\",\n    marginBottom: \"10px\",\n    marginRight: \"20px\",\n  }\n  return(\n    <div>\n      <Link to={'/room/' + id + '/'} style={{color: 'black', textDecoration: 'None'}}>\n        <SmoothSolidWhiteDiv style={divFontMargin}>\n          {title}\n        </SmoothSolidWhiteDiv>\n      </Link>\n    </div>\n  );\n}\n\nexport default RoomEntry;\n","import React from \"react\";\n// import {controls} from \"react-media-player\";\nimport {\n  CenteredContainer,\n  SmoothDiv,\n  // SmoothSolidWhiteDiv,\n  // SmoothSolidBlackDiv,\n  RowFlexContainer,\n  // ColumnFlexContainer,\n  StyledButton,\n  StyledInput,\n  MiniBanner,\n  ScrollBody,\n  Banner,\n} from \"./SharedStyledComponents\";\nimport RoomEntry from \"./RoomEntry\";\nimport \"../styles/gradient.css\";\n\n// const { PlayPause, MuteUnmute } = controls\n\nfunction createRooms(rooms) {\n  var roomEntries = []\n  for (var roomID in rooms) {\n    roomEntries.push(<RoomEntry title={rooms[roomID].title} id={roomID} />);\n  }\n  return roomEntries;\n}\n\nclass BrowsePage extends React.Component {\n  constructor(props) {\n    super(props);\n    props.update(props.token, props.status);\n    this.formRef = React.createRef();\n    this.joinRef = React.createRef();\n  }\n\n  render() {\n    const {\n      rooms, token, status,\n      create, join,\n    } = this.props;\n\n    let grow = {width: '150px'};\n    let scrollHeight = {height: \"calc(100% - 40px)\"};\n    let browsePanel = {height: \"60%\", width: \"40%\"};\n    let smoothSolidBlackDiv = {height: \"100%\", width: \"100%\"}\n    let bannerPosition = {position: 'fixed', top: '0px', left: '0px'};\n\n    let RoomComponents = createRooms(rooms);\n\n    return (\n      <CenteredContainer className=\"gradient-static\">\n        <Banner style={bannerPosition}>\n          Broadcast\n        </Banner>\n        <RowFlexContainer style={browsePanel}>\n          <SmoothDiv style={smoothSolidBlackDiv} >\n            <MiniBanner>\n              Your rooms:\n              <p/>\n            </MiniBanner>\n            <ScrollBody style={scrollHeight}>\n              {RoomComponents}\n            </ScrollBody>\n            <p/>\n            <form id=\"room-creation-form\"\n                  onSubmit={evt => create(evt, this.formRef, token, status)}\n                  ref={this.formRef}\n            >\n              <RowFlexContainer>\n                <StyledInput id=\"create-title\" placeholder=\"Title…\" type=\"text\" />\n                <StyledInput id=\"create-access-code\" placeholder=\"Access code…\" type=\"password\" />\n                <StyledButton onClick={()=>{this.formRef.current.dispatchEvent(new Event('submit'))}}\n                              style={grow}\n                > CREATE</StyledButton>\n              </RowFlexContainer>\n            </form>\n\n            <form id=\"room-creation-form\"\n                  onSubmit={evt => join(evt, this.joinRef, token, status)}\n                  ref={this.joinRef}\n            >\n              <RowFlexContainer>\n                <StyledInput id=\"join-id\" placeholder=\"ID…\" type=\"text\" />\n                <StyledInput id=\"join-access-code\" placeholder=\"Access code…\" type=\"password\" />\n                <StyledButton onClick={()=>{this.joinRef.current.dispatchEvent(new Event('submit'))}}\n                              style={grow}\n                > JOIN </StyledButton>\n              </RowFlexContainer>\n            </form>\n          </SmoothDiv>\n        </RowFlexContainer>\n      </CenteredContainer>\n    );\n  }\n};\n\nexport default BrowsePage;\n","import { connect } from 'react-redux';\nimport { fetchRooms, createRoom, joinRoom } from '../store/actions.js';\nimport { STATUS } from '../web.js';\nimport history from '../history.js';\n\nimport BrowsePage from './BrowsePage.js';\n// import RoomPage from './RoomPage.js'\n\n\nconst mapStateToProps = state => ({\n  rooms: state.data.rooms,\n  token: state.auth.authToken,\n  status: state.auth.authStatus,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  update: (token, status) => {\n    if (status === STATUS.SUCCESS) {\n      dispatch(fetchRooms(token));\n    } else if (status === STATUS.FETCHING) {\n      // pass\n    } else {\n      history.push('/login');\n    }\n  },\n  create: (evt, ref, token, status) => {\n    if (status === STATUS.SUCCESS) {\n      var title = ref.current[0].value;\n      var access_code = ref.current[1].value;\n      ref.current.reset()\n      dispatch(createRoom(title, access_code, token));\n    } else {\n      history.push('/login');\n    }\n  },\n  join: (evt, ref, token, status) => {\n    if (status === STATUS.SUCCESS) {\n      var id = ref.current[0].value;\n      var access_code = ref.current[1].value;\n      ref.current.reset()\n      dispatch(joinRoom(id, access_code, token));\n    } else {\n      history.push('/login');\n    }\n  },\n});\n\n\nconst BrowseManager = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BrowsePage);\n\nexport default BrowseManager;\n","import React from 'react';\nimport {\n  Router,\n  // Switch,\n  Route,\n  Link,\n} from \"react-router-dom\";\n\nimport store from './store/store.js';\nimport history from './history';\nimport { fetchRooms, fetchRoomUsers, fetchRoomEntries } from './store/actions.js';\n\nimport LoginManager from \"./components/LoginManager.js\";\nimport RoomManager from \"./components/RoomManager.js\";\nimport BrowseManager from \"./components/BrowseManager.js\";\n\n\nfunction updateState() {\n  store.dispatch(fetchRooms(store.getState().auth.authToken))\n  if (store.getState().variables.currentRoomID !== undefined) {\n    store.dispatch(fetchRoomEntries(\n      store.getState().variables.currentRoomID,\n      store.getState().auth.authToken,\n    ));\n    store.dispatch(fetchRoomUsers(\n      store.getState().variables.currentRoomID,\n      store.getState().auth.authToken,\n    ));\n  }\n\n}\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    setInterval(() => (updateState()), 1000)\n  }\n\n  render() {\n    let foreground = {zIndex: \"9999999\"};\n    return (\n      <Router history={history}>\n        <Route path=\"/login\" component={LoginManager}/>\n        <Route path=\"/register\" component={LoginManager}/>\n        <Route path=\"/browse\" component={BrowseManager}/>\n        <Route path=\"/room/:id\" component={RoomManager} />\n        <Route exact={true} path=\"/\" render={()=>(\"Home page!\")}/>\n        <br/>\n        <div name=\"debugNavigation\" style={foreground}>\n          <Link to=\"/login\" style={{color: 'black', textDecoration: 'None'}}> Login Page </Link>\n          <Link to=\"/browse\" style={{color: 'black', textDecoration: 'None'}}> Browser </Link>\n          <Link to=\"/room\" style={{color: 'black', textDecoration: 'None'}}> Room </Link>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n\n// export default function App() {\n//   return (\n//     <Router>\n//       <div>\n//         <nav>\n//           <ul>\n//             <li>\n//               <Link to=\"/\">Home</Link>\n//             </li>\n//             <li>\n//               <Link to=\"/about\">About</Link>\n//             </li>\n//             <li>\n//               <Link to=\"/users\">Users</Link>\n//             </li>\n//           </ul>\n//         </nav>\n//\n//         {/* A <Switch> looks through its children <Route>s and\n//             renders the first one that matches the current URL. */}\n//         <Switch>\n//           <Route path=\"/about\">\n//             <About />\n//           </Route>\n//           <Route path=\"/users\">\n//             <Users />\n//           </Route>\n//           <Route path=\"/\">\n//             <Home />\n//           </Route>\n//         </Switch>\n//       </div>\n//     </Router>\n//   );\n// }\n//\n// function Home() {\n//   return <h2>Home</h2>;\n// }\n//\n// function About() {\n//   return <h2>About</h2>;\n// }\n//\n// function Users() {\n//   return <h2>Users</h2>;\n// }\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport store from './store/store.js';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}